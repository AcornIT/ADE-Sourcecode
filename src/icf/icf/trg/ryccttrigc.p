/*********************************************************************
* Copyright (C) 2000 by Progress Software Corporation ("PSC"),       *
* 14 Oak Park, Bedford, MA 01730, and other contributors as listed   *
* below.  All Rights Reserved.                                       *
*                                                                    *
* The Initial Developer of the Original Code is PSC.  The Original   *
* Code is Progress IDE code released to open source December 1, 2000.*
*                                                                    *
* The contents of this file are subject to the Possenet Public       *
* License Version 1.0 (the "License"); you may not use this file     *
* except in compliance with the License.  A copy of the License is   *
* available as of the date of this notice at                         *
* http://www.possenet.org/license.html                               *
*                                                                    *
* Software distributed under the License is distributed on an "AS IS"*
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. You*
* should refer to the License for the specific language governing    *
* rights and limitations under the License.                          *
*                                                                    *
* Contributors: MIP Holdings (Pty) Ltd ("MIP")                       *
*               PSC                                                  *
*                                                                    *
*********************************************************************/

TRIGGER PROCEDURE FOR CREATE OF ryc_custom_ui_trigger .

/* generic trigger override include file to disable trigger if required */
{af/sup2/aftrigover.i &DB-NAME      = "ICFDB"
                      &TABLE-NAME   = "ryc_custom_ui_trigger"
                      &TRIGGER-TYPE = "CREATE"}

/* Created automatically using ERwin ICF Trigger template db/af/erw/afercustrg.i
   Do not change manually. Customisations to triggers should be placed in separate
   include files pulled into the trigger. ICF auto generates write trigger custom
   include files. Delete or create customisation include files need to be created
   manually. Be sure to put the hook in ERwin directly so as not to have you changes
   overwritten.
   User defined Macro (UDP) Summary (case sensitive)
   ryc_custom_ui_trigger           Expands to full table name, e.g. gsm_user
   %TableFLA            Expands to table unique code, e.g. gsmus
   %TableObj            If blank or not defined expands to table_obj with no prefix (framework standard)
                        If defined, uses this field as the object field
                        If set to "none" then indicates table does not have an object field
   XYZ                  Do not define so we can compare against an empty string

   See docs for explanation of replication macros 
*/   

&SCOPED-DEFINE TRIGGER_TABLE ryc_custom_ui_trigger
&SCOPED-DEFINE TRIGGER_FLA rycct
&SCOPED-DEFINE TRIGGER_OBJ custom_ui_trigger_obj


DEFINE BUFFER lb_table FOR ryc_custom_ui_trigger.      /* Used for recursive relationships */
DEFINE BUFFER lb1_table FOR ryc_custom_ui_trigger.     /* Used for lock upgrades */

DEFINE BUFFER o_ryc_custom_ui_trigger FOR ryc_custom_ui_trigger.

/* Standard top of CREATE trigger code */
{af/sup/aftrigtopc.i}

  



/* Generated by ICF ERwin Template */
/* ryc_smartobject has ryc_custom_ui_trigger ON CHILD INSERT SET NULL */
IF NOT(CAN-FIND(FIRST ryc_smartobject WHERE
    ryc_custom_ui_trigger.smartobject_obj = ryc_smartobject.smartobject_obj)) THEN
  DO:
    
    ASSIGN ryc_custom_ui_trigger.smartobject_obj = 0 .
  END.



/* Generated by ICF ERwin Template */
/* ryc_ui_trigger has ryc_custom_ui_trigger ON CHILD INSERT RESTRICT */
IF 
    ( ryc_custom_ui_trigger.ui_trigger_obj <> 0 ) THEN
  DO:
    IF NOT(CAN-FIND(FIRST ryc_ui_trigger WHERE
        ryc_custom_ui_trigger.ui_trigger_obj = ryc_ui_trigger.ui_trigger_obj)) THEN
        DO:
          /* Cannot create child because parent does not exist ! */
          ASSIGN lv-error = YES lv-errgrp = "AF ":U lv-errnum = 102 lv-include = "ryc_custom_ui_trigger|ryc_ui_trigger":U.
          RUN error-message (lv-errgrp, lv-errnum, lv-include).
        END.
    
    
  END.

/* Generated by ICF ERwin Template */
/* ryc_smartobject_field has ryc_custom_ui_trigger ON CHILD INSERT SET NULL */
IF NOT(CAN-FIND(FIRST ryc_smartobject_field WHERE
    ryc_custom_ui_trigger.smartobject_field_obj = ryc_smartobject_field.smartobject_field_obj)) THEN
  DO:
    
    ASSIGN ryc_custom_ui_trigger.smartobject_field_obj = 0 .
  END.








ASSIGN ryc_custom_ui_trigger.{&TRIGGER_OBJ} = getNextObj().





/* Update Audit Log */
IF CAN-FIND(FIRST gsc_entity_mnemonic
            WHERE gsc_entity_mnemonic.entity_mnemonic = 'rycct':U
              AND gsc_entity_mnemonic.auditing_enabled = YES) THEN
  RUN af/app/afauditlgp.p (INPUT "CREATE":U, INPUT "rycct":U, INPUT BUFFER ryc_custom_ui_trigger:HANDLE, INPUT BUFFER o_ryc_custom_ui_trigger:HANDLE).

/* Standard bottom of CREATE trigger code */
{af/sup/aftrigendc.i}


/* Place any specific CREATE trigger customisations here */
