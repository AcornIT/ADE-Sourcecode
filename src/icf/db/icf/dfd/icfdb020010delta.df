ADD TABLE "ryc_relationship"
  AREA "Schema Area"
  DESCRIPTION "This table stores relationship information for tables in the Dynamics repository and application databases built using Dynamics.

Multiple relationships can exist between the same parent and child table if required, so one of these must be flagged as the primary relationship to use initially when joining between the two tables.

The relationship reference field is unique so that it can be referenced in code if required, where multiple possible relationships exists and application functionality depends on the relationship. Where the relationship reference is irrelevant, it can be automatically generated using the Dynamics sequences.

The attributes about the relationship map closely with the attributes supported by ERWin from Computer Associates.

The fields used to join the tables in the relationship are specified in the child table ryc_relationship_field.

The contents of this table should be automatically populated from information exported from a case tool such as ERwin, to make synchronization of changes as automated as possible.

This table, once populated, can be used to support generic application functionality such as automatic object generation, referential integrity trigger code, etc.

It is envisaged that at some stage in the future, the information in these tables will be replaced with support for relationships in the core language meta schema.
"
  DUMP-NAME "rycre"
  TABLE-TRIGGER "CREATE" OVERRIDE PROCEDURE "icf/trg/rycretrigc.p" CRC "?" 
  TABLE-TRIGGER "DELETE" OVERRIDE PROCEDURE "icf/trg/rycretrigd.p" CRC "?" 
  TABLE-TRIGGER "REPLICATION-CREATE" OVERRIDE PROCEDURE "icf/trg/rycrereplc.p" CRC "?" 
  TABLE-TRIGGER "REPLICATION-DELETE" OVERRIDE PROCEDURE "icf/trg/rycrerepld.p" CRC "?" 
  TABLE-TRIGGER "REPLICATION-WRITE" OVERRIDE PROCEDURE "icf/trg/rycrereplw.p" CRC "?" 
  TABLE-TRIGGER "WRITE" OVERRIDE PROCEDURE "icf/trg/rycretrigw.p" CRC "?" 

ADD FIELD "relationship_obj" OF "ryc_relationship" AS decimal 
  FORMAT "->>>>>>>>>>>>>>>>>9.999999999"
  INITIAL "0"
  LABEL "Relationship Obj"
  POSITION 2
  SQL-WIDTH 24
  VALMSG "o_obj"
  HELP "Relationship obj"
  DECIMALS 9
  ORDER 10

ADD FIELD "relationship_reference" OF "ryc_relationship" AS character 
  DESCRIPTION "This is a unique reference to identify the relationship. Where multiple relationships exist between the same table, this field could help identify which one is which, and possibly may be referenced in code if required.

Where the relationship reference is not important, it can be automatically generated using the Dynamics sequence functionality.
"
  FORMAT "X(15)"
  INITIAL ""
  LABEL "Relationship Reference"
  POSITION 3
  SQL-WIDTH 30
  VALMSG "s_reference"
  HELP "Relationship reference"
  ORDER 20

ADD FIELD "relationship_description" OF "ryc_relationship" AS character 
  DESCRIPTION "This is a free text description to document the purpose and use of the relationship. It is optional."
  FORMAT "X(70)"
  INITIAL ""
  LABEL "Relationship Description"
  POSITION 4
  SQL-WIDTH 140
  VALMSG "s_big_description"
  HELP "Relationship description"
  ORDER 30

ADD FIELD "parent_entity" OF "ryc_relationship" AS character 
  DESCRIPTION "This is the entity mnemonic of the parent table of the relationship. The actual table name is obtained by reading the gsc_entity_mnemonic table and referencing the entity_mnemonic_description which is the actual table name in all cases.

"
  FORMAT "X(8)"
  INITIAL ""
  LABEL "Parent Entity"
  POSITION 5
  SQL-WIDTH 16
  VALMSG "s_entity_mnemonic"
  HELP "Parent entity"
  ORDER 40

ADD FIELD "child_entity" OF "ryc_relationship" AS character 
  DESCRIPTION "This is the entity mnemonic of the child table of the relationship. The actual table name is obtained by reading the gsc_entity_mnemonic table and referencing the entity_mnemonic_description which is the actual table name in all cases.

"
  FORMAT "X(8)"
  INITIAL ""
  LABEL "Child Entity"
  POSITION 6
  SQL-WIDTH 16
  VALMSG "s_entity_mnemonic"
  HELP "Child entity"
  ORDER 50

ADD FIELD "primary_relationship" OF "ryc_relationship" AS logical 
  DESCRIPTION "Multiple joins can exist between the same parent and child table, and where this occurs, this flag identifies which of the joins is the main join to use.

"
  FORMAT "YES/NO"
  INITIAL "YES"
  LABEL "Primary Relationship"
  POSITION 7
  SQL-WIDTH 1
  VIEW-AS "VIEW-AS TOGGLE-BOX"
  VALMSG "l_yesno"
  HELP "Primary relationship"
  ORDER 60

ADD FIELD "identifying_relationship" OF "ryc_relationship" AS logical 
  DESCRIPTION "This is a flag, yes or no that indicates whether this is an identifying relationship or not.

An identifying relationship means that the child table is totally dependant on the parent table. If this flag is set to YES, then the nulls_allowed flag cannot be YES as the join must be mandatory.

A mandatory join however does not necessarily indicate an identifying relationship. To be identifying, the child table really has to be a sub-table of the parent. Where the parent field is simply an attribute of the child table (foreign key) then the relationship is not really identifying.

When using ERwin, if the relationship is flagged as identifying, the foreign key fields are forced into the primary key of the child table, which is not always what you want. For this reason, when using ERwin, most relationships are flagged as non-identifying but no-nulls which has the same affect, just without the forced primary key fields.

The identifying flag is for the most part just for information purposes and to force the setting of the nulls_allowed field. It is really the nulls_allowed field that is the important one.

"
  FORMAT "YES/NO"
  INITIAL "NO"
  LABEL "Identifying Relationship"
  POSITION 8
  SQL-WIDTH 1
  VIEW-AS "VIEW-AS TOGGLE-BOX"
  VALMSG "l_noyes"
  HELP "Identifying relationship"
  ORDER 70

ADD FIELD "nulls_allowed" OF "ryc_relationship" AS logical 
  DESCRIPTION "This is a logical field, yes or no, that identifies whether nulls are allowed on the parent side of the join, i.e. whether this is an outer join or not.

If nulls_allowed is set to YES, then the join to the parent table is optional. 

This determines the ""1 to"" or ""0 or 1 to"" part of the relationship."
  FORMAT "YES/NO"
  INITIAL "NO"
  LABEL "Nulls Allowed"
  POSITION 9
  SQL-WIDTH 1
  VIEW-AS "VIEW-AS TOGGLE-BOX"
  VALMSG "l_noyes"
  HELP "Nulls allowed"
  ORDER 80

ADD FIELD "cardinality" OF "ryc_relationship" AS character 
  DESCRIPTION "This field determines the cardinality of the join to the child table. It is a character field and can take the following values:

01M = 0, 1 or Many
1M = 1 or Many
01 = 0 or 1
n (where n is a number e.g. 1) = Exactly n

This is the child portion of the relationship. An example full relationship description if this field is 01M and the nulls_allowed in YES:

0 or 1 to 0, 1 or Many

An example where nulls_allowed is NO and this field is 01:

1 to 0 or 1

"
  FORMAT "X(5)"
  INITIAL ""
  LABEL "Cardinality"
  POSITION 10
  SQL-WIDTH 10
  VALMSG "s_string_5"
  HELP "Cardinality"
  ORDER 90

ADD FIELD "update_parent_allowed" OF "ryc_relationship" AS logical 
  DESCRIPTION "This flag indicates whether updates to the parent table are allowed YES or NO when child records have been created. The default is YES.

This rule somewhat overlaps with the other referential integrity rules, but is a specific case with specific code to implement it. It is also for backward compatibility with the application used as the basis for this design."
  FORMAT "YES/NO"
  INITIAL "YES"
  LABEL "Update Parent Allowed"
  POSITION 11
  SQL-WIDTH 1
  VIEW-AS "VIEW-AS TOGGLE-BOX"
  VALMSG "l_yesno"
  HELP "Update parent allowed"
  ORDER 100

ADD FIELD "parent_delete_action" OF "ryc_relationship" AS character 
  DESCRIPTION "This is the action to take when a record in the parent is deleted. 

The default setting for this action depends on the type of relationship and whether nulls are allowed. A table called ryc_ri_default exists that defines the defaults to use.

Valid actions are as follows:

R - RESTRICT
Prevents you from deleting a record in the parent entity if there are one or more related records in the child entity.

C - CASCADE 
When a record in the parent entity is deleted, each related record in the child entity is also deleted.

S - SET NULL
When a record in the parent entity is deleted, the foreign key attributes or columns in each related record of the child entity are set to Null.

N = NONE
No referential integrity action is required.

"
  FORMAT "X(1)"
  INITIAL ""
  LABEL "Parent Delete Action"
  POSITION 12
  SQL-WIDTH 2
  VALMSG "s_string_1"
  HELP "Parent delete action"
  ORDER 110

ADD FIELD "parent_insert_action" OF "ryc_relationship" AS character 
  DESCRIPTION "This is the action to take when a record in the parent is inserted. 

The default setting for this action depends on the type of relationship and whether nulls are allowed. A table called ryc_ri_default exists that defines the defaults to use.

Valid actions are as follows:

R - RESTRICT
C - CASCADE 
S - SET NULL
N = NONE

This is simply here because ERWin supports this action, however its use is meaningless and not usually implemented.

It will therefore typically always be set to N for None
"
  FORMAT "X(1)"
  INITIAL ""
  LABEL "Parent Insert Action"
  POSITION 13
  SQL-WIDTH 2
  VALMSG "s_string_1"
  HELP "Parent insert action"
  ORDER 120

ADD FIELD "parent_update_action" OF "ryc_relationship" AS character 
  DESCRIPTION "This is the action to take when a record in the parent is updated. 

The default setting for this action depends on the type of relationship and whether nulls are allowed. A table called ryc_ri_default exists that defines the defaults to use.

Valid actions are as follows:

R - RESTRICT
Prevents you from updating a record in the parent entity if there are one or more related records in the child entity.

C - CASCADE 
When a record in the parent entity is updated, each related record in the child entity is also updated.

S - SET NULL
When a record in the parent entity or table is updated, the foreign key attributes or columns in each related record of the child entity are set to Null.

N = NONE
No referential integrity action is required.

"
  FORMAT "X(1)"
  INITIAL ""
  LABEL "Parent Update Action"
  POSITION 14
  SQL-WIDTH 2
  VALMSG "s_string_1"
  HELP "Parent update action"
  ORDER 130

ADD FIELD "parent_verb_phrase" OF "ryc_relationship" AS character 
  DESCRIPTION "This is the verb phrase to describe the relationship from the parent to the child."
  FORMAT "X(35)"
  INITIAL ""
  LABEL "Parent Verb Phrase"
  POSITION 15
  SQL-WIDTH 70
  VALMSG "s_name"
  HELP "Parent verb phrase"
  ORDER 140

ADD FIELD "child_delete_action" OF "ryc_relationship" AS character 
  DESCRIPTION "This is the action to take when a record in the child is deleted. 

The default setting for this action depends on the type of relationship and whether nulls are allowed. A table called ryc_ri_default exists that defines the defaults to use.

Valid actions are as follows:

R - RESTRICT
C - CASCADE 
S - SET NULL
N = NONE

This is simply here because ERWin supports this action, however its use is meaningless and not usually implemented.

It will therefore typically always be set to N for None
"
  FORMAT "X(1)"
  INITIAL ""
  LABEL "Child Delete Action"
  POSITION 16
  SQL-WIDTH 2
  VALMSG "s_string_1"
  HELP "Child delete action"
  ORDER 150

ADD FIELD "child_insert_action" OF "ryc_relationship" AS character 
  DESCRIPTION "This is the action to take when a record in the child is inserted. 

The default setting for this action depends on the type of relationship and whether nulls are allowed. A table called ryc_ri_default exists that defines the defaults to use.

Valid actions are as follows:

R - RESTRICT
Prevents you from inserting a record in the child entity if there is no related record in the parent entity.

C - CASCADE 
This is supported for ERwin but not implemented as it does not make sense.

S - SET NULL
When a record in the child entity is inserted, the key attributes or columns in the parent entity are set to Null.

N = NONE
No referential integrity action is required.

"
  FORMAT "X(1)"
  INITIAL ""
  LABEL "Child Insert Action"
  POSITION 17
  SQL-WIDTH 2
  VALMSG "s_string_1"
  HELP "Child insert action"
  ORDER 160

ADD FIELD "child_update_action" OF "ryc_relationship" AS character 
  DESCRIPTION "This is the action to take when a record in the child is updated. 

The default setting for this action depends on the type of relationship and whether nulls are allowed. A table called ryc_ri_default exists that defines the defaults to use.

Valid actions are as follows:

R - RESTRICT
Prevents you from updating a record in the  child entity if there are no related records in the parent entity.

C - CASCADE 
When a record in the child entity is updated, the parent entity or table is also updated.

S - SET NULL
When a record in the child entity is updated, the foreign key attributes or columns in the parent entity are set to Null.

N = NONE
No referential integrity action is required.

"
  FORMAT "X(1)"
  INITIAL ""
  LABEL "Child Update Action"
  POSITION 18
  SQL-WIDTH 2
  VALMSG "s_string_1"
  HELP "Child update action"
  ORDER 170

ADD FIELD "child_verb_phrase" OF "ryc_relationship" AS character 
  DESCRIPTION "This is the verb phrase to describe the relationship from the child to the parent."
  FORMAT "X(35)"
  INITIAL ""
  LABEL "Child Verb Phrase"
  POSITION 19
  SQL-WIDTH 70
  VALMSG "s_name"
  HELP "Child verb phrase"
  ORDER 180

ADD FIELD "model_external_reference" OF "ryc_relationship" AS character 
  DESCRIPTION "This is a unique reference from the entity model diagram to identify the reference. In ERwin this equates to the %RelId macro and is globally unique (a GUID).

In the event this field comes in blank because the modelling tool used does not support a relatsionship id, or in fact no modeling tool is being used, this field will be set to the same as the relationship_reference to ensure it gets a unique value.

The primary use of this field is to update existing relationships in subsequent imports.
"
  FORMAT "X(70)"
  INITIAL ""
  LABEL "Model External Reference"
  POSITION 20
  SQL-WIDTH 140
  VALMSG "s_big_description"
  HELP "Model external reference"
  ORDER 190

ADD INDEX "XPKryc_relationship" ON "ryc_relationship" 
  AREA "Schema Area"
  UNIQUE
  PRIMARY
  INDEX-FIELD "relationship_obj" ASCENDING 

ADD INDEX "XAK1ryc_relationship" ON "ryc_relationship" 
  AREA "Schema Area"
  UNIQUE
  INDEX-FIELD "relationship_reference" ASCENDING 

ADD INDEX "XAK2ryc_relationship" ON "ryc_relationship" 
  AREA "Schema Area"
  UNIQUE
  INDEX-FIELD "model_external_reference" ASCENDING 

ADD INDEX "XIE1ryc_relationship" ON "ryc_relationship" 
  AREA "Schema Area"
  INDEX-FIELD "relationship_description" ASCENDING 

ADD INDEX "XIE2ryc_relationship" ON "ryc_relationship" 
  AREA "Schema Area"
  INDEX-FIELD "parent_entity" ASCENDING 

ADD INDEX "XIE3ryc_relationship" ON "ryc_relationship" 
  AREA "Schema Area"
  INDEX-FIELD "child_entity" ASCENDING 

ADD INDEX "XIE4ryc_relationship" ON "ryc_relationship" 
  AREA "Schema Area"
  INDEX-FIELD "primary_relationship" ASCENDING 

ADD TABLE "ryc_relationship_field"
  AREA "Schema Area"
  DESCRIPTION "This table defines the fields used to join the two tables defined in the ryc_relationship table that this table is a child of. Multiple field joins are supported, as well as rolenamed foreign keys where the field names in the two tables do not match.

The join sequence determines the order to reference the fields when constructing a dynamic where clause to join the tables.

When joining to some tables, additional constant values for fields in the child table or parent table may need to be specified and this functionality is supported. 

An example of this in the Dynamics repository is when joining from the gsc_object_type table to the ryc_attribute_value table, where there is a single field from the parent table, the object_type_obj, but we must additionally specify a 0 value for other fields, eg. container_smartobject_obj, smartobject_obj and object_instance_obj. This means that when using constant values, the child or the parent field may be left blank.



"
  DUMP-NAME "rycrf"
  TABLE-TRIGGER "CREATE" OVERRIDE PROCEDURE "icf/trg/rycrftrigc.p" CRC "?" 
  TABLE-TRIGGER "DELETE" OVERRIDE PROCEDURE "icf/trg/rycrftrigd.p" CRC "?" 
  TABLE-TRIGGER "REPLICATION-CREATE" OVERRIDE PROCEDURE "icf/trg/rycrfreplc.p" CRC "?" 
  TABLE-TRIGGER "REPLICATION-DELETE" OVERRIDE PROCEDURE "icf/trg/rycrfrepld.p" CRC "?" 
  TABLE-TRIGGER "REPLICATION-WRITE" OVERRIDE PROCEDURE "icf/trg/rycrfreplw.p" CRC "?" 
  TABLE-TRIGGER "WRITE" OVERRIDE PROCEDURE "icf/trg/rycrftrigw.p" CRC "?" 

ADD FIELD "relationship_field_obj" OF "ryc_relationship_field" AS decimal 
  FORMAT "->>>>>>>>>>>>>>>>>9.999999999"
  INITIAL "0"
  LABEL "Relationship Field Obj"
  POSITION 2
  SQL-WIDTH 24
  VALMSG "o_obj"
  HELP "Relationship field obj"
  DECIMALS 9
  ORDER 10

ADD FIELD "relationship_obj" OF "ryc_relationship_field" AS decimal 
  FORMAT "->>>>>>>>>>>>>>>>>9.999999999"
  INITIAL "0"
  LABEL "Relationship Obj"
  POSITION 3
  SQL-WIDTH 24
  VALMSG "o_obj"
  HELP "Relationship obj"
  DECIMALS 9
  ORDER 20

ADD FIELD "join_sequence" OF "ryc_relationship_field" AS integer 
  DESCRIPTION "This is the order within a relationship in which to join to the specified fields. It is used when dynamically constructing where clauses to join the tables described in the relationship.

The sequence must be unique within a relationship. It is an integer field. The lower the number, the higher in the sort sequence the field will be, e.g. sequence 0 will be first, 1 next, etc.



"
  FORMAT "->>9"
  INITIAL "0"
  LABEL "Join Sequence"
  POSITION 4
  SQL-WIDTH 4
  COLUMN-LABEL "Join Seq."
  VALMSG "n_integer_3"
  HELP "Join sequence"
  ORDER 30

ADD FIELD "parent_table_name" OF "ryc_relationship_field" AS character 
  DESCRIPTION "This is the table name for the field in the parent being joined from. This may be blank if the use_parent_constant_value is set to YES and a constant value is specified.

The table and field name are stored separately to facilitate efficient querying of relationships by table and/or field name."
  FORMAT "X(35)"
  INITIAL ""
  LABEL "Parent Table Name"
  POSITION 5
  SQL-WIDTH 70
  VALMSG "s_name"
  HELP "Parent table name"
  ORDER 40

ADD FIELD "parent_field_name" OF "ryc_relationship_field" AS character 
  DESCRIPTION "This is the field name for the field in the parent table being joined from. This may be blank if the use_parent_constant_value is set to YES and a constant value is specified.

The table and field name are stored separately to facilitate efficient querying of relationships by table and/or field name."
  FORMAT "X(35)"
  INITIAL ""
  LABEL "Parent Field Name"
  POSITION 6
  SQL-WIDTH 70
  VALMSG "s_name"
  HELP "Parent field name"
  ORDER 50

ADD FIELD "use_parent_constant_value" OF "ryc_relationship_field" AS logical 
  DESCRIPTION "This is a flag, yes or no, indicating whether to use a constant value for joining to the parent when constructing the where clause."
  FORMAT "YES/NO"
  INITIAL "NO"
  LABEL "Use Parent Constant Value"
  POSITION 7
  SQL-WIDTH 1
  VIEW-AS "VIEW-AS TOGGLE-BOX"
  VALMSG "l_noyes"
  HELP "Use parent constant value"
  ORDER 60

ADD FIELD "parent_constant_value" OF "ryc_relationship_field" AS character 
  DESCRIPTION "If the use_parent_constant_value is set to YES, this is the value to use for joining to the parent when constructing the where clause. It is stored as a character and must be converted to the appropriate data type at runtime."
  FORMAT "X(70)"
  INITIAL ""
  LABEL "Parent Constant Value"
  POSITION 8
  SQL-WIDTH 140
  VALMSG "s_big_name"
  HELP "Parent constant value"
  ORDER 70

ADD FIELD "child_table_name" OF "ryc_relationship_field" AS character 
  DESCRIPTION "This is the table name for the field in the child table being joined from. This may be blank if the use_child_constant_value is set to YES and a constant value is specified.

The table and field name are stored separately to facilitate efficient querying of relationships by table and/or field name."
  FORMAT "X(35)"
  INITIAL ""
  LABEL "Child Table Name"
  POSITION 9
  SQL-WIDTH 70
  VALMSG "s_name"
  HELP "Child table name"
  ORDER 80

ADD FIELD "child_field_name" OF "ryc_relationship_field" AS character 
  DESCRIPTION "This is the field name for the field in the child table being joined from. This may be blank if the use_child_constant_value is set to YES and a constant value is specified.

The table and field name are stored separately to facilitate efficient querying of relationships by table and/or field name."
  FORMAT "X(35)"
  INITIAL ""
  LABEL "Child Field Name"
  POSITION 10
  SQL-WIDTH 70
  VALMSG "s_name"
  HELP "Child field name"
  ORDER 90

ADD FIELD "use_child_constant_value" OF "ryc_relationship_field" AS logical 
  DESCRIPTION "This is a flag, yes or no, indicating whether to use a constant value for joining to the child when constructing the where clause."
  FORMAT "YES/NO"
  INITIAL "NO"
  LABEL "Use Child Constant Value"
  POSITION 11
  SQL-WIDTH 1
  VIEW-AS "VIEW-AS TOGGLE-BOX"
  VALMSG "l_noyes"
  HELP "Use child constant value"
  ORDER 100

ADD FIELD "child_constant_value" OF "ryc_relationship_field" AS character 
  DESCRIPTION "If the use_child_constant_value is set to YES, this is the value to use for joining to the child when constructing the where clause. It is stored as a character and must be converted to the appropriate data type at runtime."
  FORMAT "X(70)"
  INITIAL ""
  LABEL "Child Constant Value"
  POSITION 12
  SQL-WIDTH 140
  VALMSG "s_big_description"
  HELP "Child constant value"
  ORDER 110

ADD INDEX "XPKryc_relationship_field" ON "ryc_relationship_field" 
  AREA "Schema Area"
  UNIQUE
  PRIMARY
  INDEX-FIELD "relationship_field_obj" ASCENDING 

ADD INDEX "XAK1ryc_relationship_field" ON "ryc_relationship_field" 
  AREA "Schema Area"
  UNIQUE
  INDEX-FIELD "relationship_obj" ASCENDING 
  INDEX-FIELD "join_sequence" ASCENDING 

ADD INDEX "XIE1ryc_relationship_field" ON "ryc_relationship_field" 
  AREA "Schema Area"
  INDEX-FIELD "parent_table_name" ASCENDING 

ADD INDEX "XIE2ryc_relationship_field" ON "ryc_relationship_field" 
  AREA "Schema Area"
  INDEX-FIELD "parent_field_name" ASCENDING 

ADD INDEX "XIE3ryc_relationship_field" ON "ryc_relationship_field" 
  AREA "Schema Area"
  INDEX-FIELD "child_table_name" ASCENDING 

ADD INDEX "XIE4ryc_relationship_field" ON "ryc_relationship_field" 
  AREA "Schema Area"
  INDEX-FIELD "child_field_name" ASCENDING 

ADD TABLE "ryc_ri_default"
  AREA "Schema Area"
  DESCRIPTION "This table defines the default referential integrity (RI) rules to apply when manually maintaining relationships in the ryc_relationship table.

The rules in this table will be used to default the parent and child actions based on the value of the identifying_relationship and nulls_allowed fields.

The standard set of RI defaults used by Dynamics are as follows:

For identifying and non-identifying but will no nulls the defaults are:
Child Delete = None
Child Insert = Restrict
Child Update = Restrict
Parent Delete = Restrict
Parent Insert = None
Parent Update = Restrict

For non-indentifying but with nulls allowed the defaults are:
Child Delete = None
Child Insert = Set Null
Child Update = Set Null
Parent Delete = Set Null
Parent Insert = None
Parent Update = Set Null

These are usually correct apart from the need to sometimes change the delete rules for the parent to cascade, and soemtimes even when a relationship allows nulls, you still want a restrict rule rather than a set null rule.
"
  DUMP-NAME "rycri"
  TABLE-TRIGGER "CREATE" OVERRIDE PROCEDURE "icf/trg/rycritrigc.p" CRC "?" 
  TABLE-TRIGGER "DELETE" OVERRIDE PROCEDURE "icf/trg/rycritrigd.p" CRC "?" 
  TABLE-TRIGGER "REPLICATION-CREATE" OVERRIDE PROCEDURE "icf/trg/rycrireplc.p" CRC "?" 
  TABLE-TRIGGER "REPLICATION-DELETE" OVERRIDE PROCEDURE "icf/trg/rycrirepld.p" CRC "?" 
  TABLE-TRIGGER "REPLICATION-WRITE" OVERRIDE PROCEDURE "icf/trg/rycrireplw.p" CRC "?" 
  TABLE-TRIGGER "WRITE" OVERRIDE PROCEDURE "icf/trg/rycritrigw.p" CRC "?" 

ADD FIELD "ri_default_obj" OF "ryc_ri_default" AS decimal 
  FORMAT "->>>>>>>>>>>>>>>>>9.999999999"
  INITIAL "0"
  LABEL "Ri Default Obj"
  POSITION 2
  SQL-WIDTH 24
  VALMSG "o_obj"
  HELP "Ri default obj"
  DECIMALS 9
  ORDER 10

ADD FIELD "relationship_type" OF "ryc_ri_default" AS character 
  DESCRIPTION "This is the type of relationship. Valid values are:

IDENT = Identifying
NONIDNULL = Non-Identifying nulls allowed
NONIDNONULL = Non-Identifying no nulls
"
  FORMAT "X(15)"
  INITIAL ""
  LABEL "Relationship Type"
  POSITION 3
  SQL-WIDTH 30
  VALMSG "s_reference"
  HELP "Relationship type"
  ORDER 20

ADD FIELD "action_type" OF "ryc_ri_default" AS character 
  DESCRIPTION "This is the type of action. Valid values are:

CD = Child Delete
CI = Child Insert
CR = Child Restrict
PD = Parent Delete
PI = Parent Insert
PR = Parent Restrict
"
  FORMAT "X(3)"
  INITIAL ""
  LABEL "Action Type"
  POSITION 4
  SQL-WIDTH 6
  VALMSG "s_type"
  HELP "Action type"
  ORDER 30

ADD FIELD "default_rule" OF "ryc_ri_default" AS character 
  DESCRIPTION "This is the default rule to apply. Valid values are:

R - RESTRICT
Prevents you from deleting, inserting, or updating an instance in the parent or child entity or table if there are one or more related instances in the child or parent entity or table.

C - CASCADE
When an instance in the parent entity or table is deleted, inserted, or updated, each related instance in the child entity or table is also deleted, inserted, or updated.

S - SET NULL
When an instance in the parent entity or table is deleted, inserted, or updated, the foreign key attributes or columns in each related instance of the child entity or table are set to Null.

N - NONE
No referential integrity action is required.
"
  FORMAT "X(1)"
  INITIAL ""
  LABEL "Default Rule"
  POSITION 5
  SQL-WIDTH 2
  VALMSG "s_string_1"
  HELP "Default rule"
  ORDER 40

ADD INDEX "XPKryc_ri_default" ON "ryc_ri_default" 
  AREA "Schema Area"
  UNIQUE
  PRIMARY
  INDEX-FIELD "ri_default_obj" ASCENDING 

ADD INDEX "XAK1ryc_ri_default" ON "ryc_ri_default" 
  AREA "Schema Area"
  UNIQUE
  INDEX-FIELD "relationship_type" ASCENDING 
  INDEX-FIELD "action_type" ASCENDING 

ADD INDEX "XIE1ryc_ri_default" ON "ryc_ri_default" 
  AREA "Schema Area"
  INDEX-FIELD "action_type" ASCENDING 

ADD FIELD "use_relationship" OF "gsc_dataset_entity" AS logical
  DESCRIPTION "IF this is set to YES, then the relationship information between the entity_mnemonmic and join_entity_mnemonic fields is derived from the ryc_relationship record specified by the relationship_obj.

If this is set to NO, the relationship information is derived from a combination of join_field_list and filter_where_clause."
  FORMAT "YES/NO"
  FORMAT-SA ?
  POSITION 13
  INITIAL "NO"
  INITIAL-SA ?
  HELP "Use relationship"
  HELP-SA ""
  LABEL "Use Relationship"
  LABEL-SA ?
  COLUMN-LABEL ?
  COLUMN-LABEL-SA ?
  CAN-READ "*"
  CAN-WRITE "*"
  VALEXP ?
  VALMSG "l_noyes"
  VALMSG-SA ""
  VIEW-AS "VIEW-AS TOGGLE-BOX"
  EXTENT 0
  DECIMALS ?
  ORDER 120
  NULL-ALLOWED
  NOT-CASE-SENSITIVE
  SQL-WIDTH 1

ADD FIELD "relationship_obj" OF "gsc_dataset_entity" AS decimal
  DESCRIPTION ""
  FORMAT "->>>>>>>>>>>>>>>>>9.999999999"
  FORMAT-SA ?
  POSITION 14
  INITIAL "0"
  INITIAL-SA ?
  HELP "Relationship obj"
  HELP-SA ""
  LABEL "Relationship Obj"
  LABEL-SA ?
  COLUMN-LABEL ?
  COLUMN-LABEL-SA ?
  CAN-READ "*"
  CAN-WRITE "*"
  VALEXP ?
  VALMSG "o_obj"
  VALMSG-SA ""
  VIEW-AS ?
  EXTENT 0
  DECIMALS 9
  ORDER 130
  NULL-ALLOWED
  NOT-CASE-SENSITIVE
  SQL-WIDTH 24

ADD INDEX "XIE5gsc_dataset_entity" ON "gsc_dataset_entity"
  AREA "Schema Area"
  INDEX-FIELD "relationship_obj" ASCENDING

ADD FIELD "last_updated_by_user" OF "gsm_comment" AS character
  DESCRIPTION "This is the user login name of the user that created / last updated the comment - if known."
  FORMAT "X(15)"
  FORMAT-SA ?
  POSITION 12
  INITIAL ""
  INITIAL-SA ?
  HELP "Last updated by user"
  HELP-SA ""
  LABEL "Last Updated by User"
  LABEL-SA ?
  COLUMN-LABEL ?
  COLUMN-LABEL-SA ?
  CAN-READ "*"
  CAN-WRITE "*"
  VALEXP ?
  VALMSG "s_short_name"
  VALMSG-SA ""
  VIEW-AS ?
  EXTENT 0
  DECIMALS ?
  ORDER 110
  NULL-ALLOWED
  NOT-CASE-SENSITIVE
  SQL-WIDTH 30

ADD FIELD "last_updated_date" OF "gsm_comment" AS date
  DESCRIPTION "This is the date the comment was created / last updated."
  FORMAT "99/99/9999"
  FORMAT-SA ?
  POSITION 13
  INITIAL "TODAY"
  INITIAL-SA ?
  HELP "Last updated date"
  HELP-SA ""
  LABEL "Last Updated Date"
  LABEL-SA ?
  COLUMN-LABEL ?
  COLUMN-LABEL-SA ?
  CAN-READ "*"
  CAN-WRITE "*"
  VALEXP ?
  VALMSG "d_date_today"
  VALMSG-SA ""
  VIEW-AS ?
  EXTENT 0
  DECIMALS ?
  ORDER 120
  NULL-ALLOWED
  NOT-CASE-SENSITIVE
  SQL-WIDTH 4

ADD INDEX "XIE4gsm_comment" ON "gsm_comment"
  AREA "Schema Area"
  INDEX-FIELD "last_updated_by_user" ASCENDING

ADD INDEX "XIE5gsm_comment" ON "gsm_comment"
  AREA "Schema Area"
  INDEX-FIELD "last_updated_date" ASCENDING

UPDATE FIELD "parent_node_obj" OF "gsm_node"
  POSITION 5
  ORDER 40

UPDATE FIELD "node_label" OF "gsm_node"
  POSITION 6
  ORDER 50

UPDATE FIELD "node_checked" OF "gsm_node"
  POSITION 7
  ORDER 60

UPDATE FIELD "data_source_type" OF "gsm_node"
  POSITION 8
  ORDER 70

UPDATE FIELD "data_source" OF "gsm_node"
  POSITION 9
  ORDER 80

UPDATE FIELD "primary_sdo" OF "gsm_node"
  POSITION 10
  ORDER 90

UPDATE FIELD "logical_object" OF "gsm_node"
  POSITION 11
  ORDER 100

UPDATE FIELD "run_attribute" OF "gsm_node"
  POSITION 12
  ORDER 110

UPDATE FIELD "fields_to_store" OF "gsm_node"
  POSITION 13
  ORDER 120

UPDATE FIELD "node_text_label_expression" OF "gsm_node"
  POSITION 14
  ORDER 130

UPDATE FIELD "label_text_substitution_fields" OF "gsm_node"
  POSITION 15
  ORDER 140

UPDATE FIELD "foreign_fields" OF "gsm_node"
  POSITION 16
  ORDER 150

UPDATE FIELD "image_file_name" OF "gsm_node"
  POSITION 17
  ORDER 160

UPDATE FIELD "selected_image_file_name" OF "gsm_node"
  POSITION 18
  ORDER 170

UPDATE TABLE "gsm_required_manager"
  DESCRIPTION "This table contains a list of the managers that are required to be started during the startup of the session and the order in which they must be started. Any manager types which need to be written to the config file must always be started first. 

The write_to_config attribute of the manager will cause this procedure name to be written to the config.xml file so that it can be started up before the session makes a connection to the runtime repository.

The framework supports a standard set of managers that are required but specific applications may require the startup of additional managers for performance reasons, e.g. a financial system may require a frequently referenced financial manager api to be pre-started.

Managers can be overridden and customized using the is_a_super_of field and search_target field."

ADD FIELD "is_a_super_of" OF "gsm_required_manager" AS character
  DESCRIPTION "If specified, this is the manager type code of the manager that this manager overrides as a super procedure, for customization purposes.

For example, a user may create their own customization manager that needs to augment the behaviour of the standard customization manager. In this case the customized manager would have a value in this field of the standard customization manager that it augments.

Any calls that are made to the customization manager will then end up first being executed in the customized customization manager (the one added as a super procedure).

This field may contain the constant value of ""SESSION"" in which case this procedure becomes the super procedure of the session.

The manager type that is specified in this field needs to have been started BEFORE this manager, i.e. the startup order of this manager must be higher than that of the manager it is a super of.
"
  FORMAT "X(28)"
  FORMAT-SA ?
  POSITION 8
  INITIAL ""
  INITIAL-SA ?
  HELP "Is a super of"
  HELP-SA ""
  LABEL "is a Super Of"
  LABEL-SA ?
  COLUMN-LABEL ?
  COLUMN-LABEL-SA ?
  CAN-READ "*"
  CAN-WRITE "*"
  VALEXP ?
  VALMSG "s_label"
  VALMSG-SA ""
  VIEW-AS ?
  EXTENT 0
  DECIMALS ?
  ORDER 70
  NULL-ALLOWED
  NOT-CASE-SENSITIVE
  SQL-WIDTH 56

ADD FIELD "search_target" OF "gsm_required_manager" AS logical
  DESCRIPTION "If is_a_super_of is specified, then this field indicates whether the SEARCH-TARGET modifier should be used in the ADD-SUPER-PROCEDURE method call that adds the super procedure.

Normally this would be set to YES."
  FORMAT "YES/NO"
  FORMAT-SA ?
  POSITION 9
  INITIAL "YES"
  INITIAL-SA ?
  HELP "Search target"
  HELP-SA ""
  LABEL "Search Target"
  LABEL-SA ?
  COLUMN-LABEL ?
  COLUMN-LABEL-SA ?
  CAN-READ "*"
  CAN-WRITE "*"
  VALEXP ?
  VALMSG "l_yesno"
  VALMSG-SA ""
  VIEW-AS "VIEW-AS TOGGLE-BOX"
  EXTENT 0
  DECIMALS ?
  ORDER 80
  NULL-ALLOWED
  NOT-CASE-SENSITIVE
  SQL-WIDTH 1

UPDATE FIELD "created_from_profile_user_obj" OF "gsm_user"
  POSITION 9
  ORDER 80

UPDATE FIELD "external_userid" OF "gsm_user"
  POSITION 10
  ORDER 90

UPDATE FIELD "user_password" OF "gsm_user"
  POSITION 11
  ORDER 100

UPDATE FIELD "password_minimum_length" OF "gsm_user"
  POSITION 12
  ORDER 110

UPDATE FIELD "password_preexpired" OF "gsm_user"
  POSITION 13
  ORDER 120

UPDATE FIELD "password_fail_count" OF "gsm_user"
  POSITION 14
  ORDER 130

UPDATE FIELD "password_fail_date" OF "gsm_user"
  POSITION 15
  ORDER 140

UPDATE FIELD "password_fail_time" OF "gsm_user"
  POSITION 16
  ORDER 150

UPDATE FIELD "password_creation_date" OF "gsm_user"
  POSITION 17
  ORDER 160

UPDATE FIELD "password_creation_time" OF "gsm_user"
  POSITION 18
  ORDER 170

UPDATE FIELD "password_expiry_date" OF "gsm_user"
  POSITION 19
  ORDER 180

UPDATE FIELD "password_expiry_time" OF "gsm_user"
  POSITION 20
  ORDER 190

UPDATE FIELD "update_password_history" OF "gsm_user"
  POSITION 21
  ORDER 200

UPDATE FIELD "check_password_history" OF "gsm_user"
  POSITION 22
  ORDER 210

UPDATE FIELD "last_login_date" OF "gsm_user"
  POSITION 23
  ORDER 220

UPDATE FIELD "last_login_time" OF "gsm_user"
  POSITION 24
  ORDER 230

UPDATE FIELD "disabled" OF "gsm_user"
  POSITION 25
  ORDER 240

UPDATE FIELD "language_obj" OF "gsm_user"
  POSITION 26
  ORDER 250

UPDATE FIELD "password_expiry_days" OF "gsm_user"
  POSITION 27
  ORDER 260

UPDATE FIELD "maintain_system_data" OF "gsm_user"
  POSITION 28
  ORDER 270

UPDATE FIELD "default_login_company_obj" OF "gsm_user"
  POSITION 29
  ORDER 280

UPDATE FIELD "user_email_address" OF "gsm_user"
  POSITION 30
  ORDER 290

UPDATE FIELD "development_user" OF "gsm_user"
  POSITION 31
  ORDER 300

UPDATE SEQUENCE "seq_ICFDB_DBVersion"
  INITIAL 20010
  MIN-VAL 0
  MAX-VAL 20010

.
PSC
cpstream=UTF-8
.
0000036288
